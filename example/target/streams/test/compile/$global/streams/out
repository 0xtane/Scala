[0m[[0m[31merror[0m] [0m[0mC:\Users\sabax\Desktop\coding\Scala\example\src\test\scala\example\ListsSuite.scala:28:12: overloaded method value assertEquals with alternatives:[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: Array[Object],x$2: Array[Object])Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: String,x$2: Array[Object],x$3: Array[Object])Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: Float,x$2: Float,x$3: Float)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: Double,x$2: Double,x$3: Double)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: String,x$2: Double,x$3: Double)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: Double,x$2: Double)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: String,x$2: Long,x$3: Long)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: Long,x$2: Long)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: String,x$2: Float,x$3: Float,x$4: Float)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: String,x$2: Double,x$3: Double,x$4: Double)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: Object,x$2: Object)Unit <and>[0m
[0m[[0m[31merror[0m] [0m[0m  (x$1: String,x$2: Object,x$3: Object)Unit[0m
[0m[[0m[31merror[0m] [0m[0m cannot be applied to (Boolean)[0m
[0m[[0m[31merror[0m] [0m[0m    Assert.assertEquals(1 + 1 == 3) // This assertion fails! Go ahead and fix it.[0m
[0m[[0m[31merror[0m] [0m[0m           ^[0m
[0m[[0m[31merror[0m] [0m[0mone error found[0m
